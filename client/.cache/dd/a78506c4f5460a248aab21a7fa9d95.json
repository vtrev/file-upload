{"id":"../node_modules/react-image-file/dist/ImageLoader.js","dependencies":[{"name":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/ImageLoader.js.map","includedInParent":true,"mtime":1559053938283},{"name":"/home/vusi/projects/vusi-app/node_modules/react-image-file/src/ImageLoader.tsx","includedInParent":true,"mtime":1559053938519},{"name":"/home/vusi/projects/vusi-app/package.json","includedInParent":true,"mtime":1559053939559},{"name":"/home/vusi/projects/vusi-app/node_modules/react-image-file/package.json","includedInParent":true,"mtime":1559053938931},{"name":"react","loc":{"line":22,"column":22},"parent":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/ImageLoader.js","resolved":"/home/vusi/projects/vusi-app/node_modules/react/index.js"},{"name":"./loadImageProps","loc":{"line":23,"column":31},"parent":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/ImageLoader.js","resolved":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/loadImageProps.js"},{"name":"./isDefined","loc":{"line":24,"column":26},"parent":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/ImageLoader.js","resolved":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/isDefined.js"},{"name":"./constants","loc":{"line":25,"column":26},"parent":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/ImageLoader.js","resolved":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/constants.js"},{"name":"./transparentGIF","loc":{"line":26,"column":31},"parent":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/ImageLoader.js","resolved":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/transparentGIF.js"},{"name":"./ImageTemplate","loc":{"line":27,"column":30},"parent":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/ImageLoader.js","resolved":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/ImageTemplate.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar react_1 = require(\"react\");\nvar loadImageProps_1 = require(\"./loadImageProps\");\nvar isDefined_1 = require(\"./isDefined\");\nvar constants_1 = require(\"./constants\");\nvar transparentGIF_1 = require(\"./transparentGIF\");\nvar ImageTemplate_1 = require(\"./ImageTemplate\");\n/**\n * Chooses a different src string depending on\n * the status provided.\n * That is, returns the loadingURL src if the status is\n * `LOADING`, the errorURL src if the status is `ERROR`,\n * the emptyURL src if the status is `EMPTY`, and the\n * default src for any other status\n * @param status the status, `LOADING`, `ERROR`, `EMPTY` or `DONE`\n * @param src the default src string, to be used on DONE status, or if other URLS are not available\n * @param urls an object of three urls, loadingURL,errorURL,emptyURL, all optional\n */\nexports.getSRC = function (status, src, props) {\n    if (!props) {\n        return src || '';\n    }\n    ;\n    var loadingURL = props.loadingURL, errorURL = props.errorURL, emptyURL = props.emptyURL;\n    var ret = (status === constants_1.LOADING && loadingURL\n        ? loadingURL\n        : (status === constants_1.ERROR && errorURL\n            ? errorURL\n            : (status === constants_1.EMPTY && emptyURL\n                ? emptyURL\n                : src || '')));\n    return ret;\n};\n/**\n * Returns the status\n * @param props\n */\nexports.getStatus = function (props) {\n    return (props.status || constants_1.DONE);\n};\n/**\n * returns the crop type\n * @param props\n */\nexports.getCrop = function (props) {\n    return (props && props.crop ? props.crop : 'contain');\n};\n/**\n * Returns a data-x string, where 'x' is the status\n * useful for css targeting\n * @param status the status of the image loader\n */\nexports.statusAsAttr = function (status) {\n    return (\"data-status-\" + (status || 'unknown').toLowerCase());\n};\nvar ImageLoader = /** @class */ (function (_super) {\n    __extends(ImageLoader, _super);\n    function ImageLoader(props, context) {\n        var _this = _super.call(this, props, context) || this;\n        ;\n        _this.state =\n            { src: transparentGIF_1.transparentGIF,\n                alt: '',\n                status: constants_1.EMPTY,\n                width: 0,\n                height: 0\n            };\n        return _this;\n    }\n    ;\n    ImageLoader.prototype.load = function (props) {\n        var _this = this;\n        this.setState({ status: constants_1.LOADING });\n        ;\n        loadImageProps_1.loadImageProps(props, function (error, _a) {\n            var src = _a.src, alt = _a.alt, width = _a.width, height = _a.height;\n            return (error\n                ? _this.setState({ status: constants_1.ERROR, error: error })\n                : _this.setState({\n                    status: constants_1.DONE,\n                    src: src,\n                    alt: alt,\n                    width: width,\n                    height: height\n                }));\n        });\n    };\n    ;\n    ImageLoader.prototype.componentDidMount = function () {\n        if (this.props.file) {\n            this.load(this.props.file);\n        }\n    };\n    ;\n    ImageLoader.prototype.componentWillReceiveProps = function (nextProps) {\n        if (nextProps.file !== this.props.file) {\n            if (nextProps.file) {\n                this.load(nextProps.file);\n            }\n            else if (nextProps.file == null) {\n                this.setState({ src: transparentGIF_1.transparentGIF });\n            }\n        }\n    };\n    ;\n    ImageLoader.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        return ((isDefined_1.isDefined(nextProps.file) && nextProps.file !== this.props.file) ||\n            (isDefined_1.isDefined(nextProps.alt) && nextProps.alt !== this.props.alt) ||\n            (isDefined_1.isDefined(nextProps.template) && nextProps.template !== this.props.template) ||\n            (nextState.src !== this.state.src));\n    };\n    ;\n    ImageLoader.prototype.render = function () {\n        var _a = this.state, src = _a.src, imgWidth = _a.width, imgHeight = _a.height;\n        var _b = this.props, template = _b.template, width = _b.width, height = _b.height, className = _b.className;\n        var alt = this.props.alt || this.state.alt || '';\n        ;\n        var crop = exports.getCrop(this.props);\n        var status = exports.getStatus(this.state);\n        var statusAttr = exports.statusAsAttr(status);\n        var props = __assign({}, this.props, { src: exports.getSRC(status, src, this.props), alt: alt,\n            width: width,\n            height: height,\n            imgWidth: imgWidth,\n            imgHeight: imgHeight,\n            crop: crop,\n            status: status,\n            statusAttr: statusAttr,\n            className: className });\n        return React.createElement(template, props);\n    };\n    ImageLoader.defaultProps = { template: ImageTemplate_1.ImageTemplate,\n        crop: 'contain',\n        emptyURL: transparentGIF_1.transparentGIF\n    };\n    return ImageLoader;\n}(react_1.Component));\nexports.ImageLoader = ImageLoader;\nexports.default = ImageLoader;\n"},"sourceMaps":{"js":{"version":3,"file":"ImageLoader.js","sourceRoot":"","sources":["../src/ImageLoader.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Component } from 'react'\nimport { loadImageProps, ImageProps } from './loadImageProps'\nimport { isDefined } from './isDefined'\nimport { EMPTY, DONE, ERROR, LOADING, ImageLoaderLoadStatus } from './constants'\nimport { transparentGIF } from './transparentGIF'\nimport { ImageTemplate } from './ImageTemplate'\n\n/** \n * A type representing the crop option\n */\nexport type CropAttribute = 'cover' | 'contain'\n\nexport interface ImageLoaderProps \n  { template?: any\n  ; file?: string | File | Blob\n  ; alt?: string\n  ; crop?: CropAttribute\n  ; loadingURL?: string\n  ; errorURL?: string\n  ; emptyURL?: string\n  ; width?: number\n  ; height?: number\n  ; className?: string\n  }\n\nexport interface ImageLoaderState\n  { src?: string\n  ; alt?: string\n  ; status?: ImageLoaderLoadStatus\n  ; width: number\n  ; height: number\n  ; error?: Error | DOMError\n  }\n\nexport interface ImageTemplateProps extends ImageLoaderProps\n  { src: string\n  ; alt: string\n  ; width?: number\n  ; height?: number\n  ; imgWidth: number\n  ; imgHeight: number\n  ; status: ImageLoaderLoadStatus\n  ; statusAttr: string\n  ; children?: any\n  ; className?: string\n  }\n\n/**\n * Chooses a different src string depending on\n * the status provided.\n * That is, returns the loadingURL src if the status is \n * `LOADING`, the errorURL src if the status is `ERROR`,\n * the emptyURL src if the status is `EMPTY`, and the\n * default src for any other status  \n * @param status the status, `LOADING`, `ERROR`, `EMPTY` or `DONE`\n * @param src the default src string, to be used on DONE status, or if other URLS are not available\n * @param urls an object of three urls, loadingURL,errorURL,emptyURL, all optional\n */\nexport const getSRC = \n  ( status?: ImageLoaderLoadStatus, src?: string, props?: ImageLoaderProps )=>\n  { if( !props ){ return src || '' }\n  ; const { loadingURL, errorURL, emptyURL } = props\n  ; const ret =\n    ( status === LOADING && loadingURL\n    ? loadingURL\n    : ( status === ERROR && errorURL\n      ? errorURL\n      : ( status === EMPTY && emptyURL\n        ? emptyURL\n        : src || ''\n        )\n      )\n    )\n  ; return ret\n  }\n\n/**\n * Returns the status\n * @param props \n */\nexport const getStatus = \n  ( props: ImageLoaderState ): ImageLoaderLoadStatus => \n  ( props.status || DONE )\n\n/**\n * returns the crop type\n * @param props \n */\nexport const getCrop = \n  ( props: ImageLoaderProps ): CropAttribute => \n  ( props && props.crop ? props.crop : 'contain' )\n\n/**\n * Returns a data-x string, where 'x' is the status\n * useful for css targeting\n * @param status the status of the image loader\n */\nexport const statusAsAttr = \n  ( status?: ImageLoaderLoadStatus ) => \n  ( `data-status-${(status||'unknown').toLowerCase()}` )\n\nexport class ImageLoader extends Component< ImageLoaderProps, ImageLoaderState >\n  { static defaultProps:ImageLoaderProps = \n    { template: ImageTemplate\n    ,  crop:'contain'\n    ,  emptyURL:transparentGIF\n    }\n  ; constructor(props:ImageLoaderProps,context:any)\n    { super( props, context );\n    ; this.state =\n      { src:transparentGIF\n      ,  alt:''\n      ,  status:EMPTY\n      ,  width:0\n      ,  height:0\n      }\n    }\n  ; load( props: File | Blob | string )\n    { this.setState( { status: LOADING } );\n    ; loadImageProps\n        ( props\n        , ( error: Error | DOMError | null\n          , { src, alt, width, height }: ImageProps\n          ) =>\n          ( error\n          ? this.setState({status:ERROR,error})\n          : this.setState({\n              status:DONE\n            ,  src\n            ,  alt\n            ,  width\n            ,  height\n            })\n          )\n        )\n    }\n  ; componentDidMount()\n    { if( this.props.file )\n      { this.load( this.props.file )\n      }\n    }\n  ; componentWillReceiveProps( nextProps: ImageLoaderProps )\n    { if( nextProps.file !== this.props.file )\n      { if( nextProps.file )\n        { this.load( nextProps.file )\n        }\n        else if( nextProps.file == null )\n        { this.setState( { src: transparentGIF } )\n        }\n      }\n    }\n  ; shouldComponentUpdate( nextProps: ImageLoaderProps, nextState: ImageLoaderState ): boolean\n    { return (\n      ( isDefined( nextProps.file ) && nextProps.file !== this.props.file ) ||\n      ( isDefined( nextProps.alt ) && nextProps.alt !== this.props.alt ) ||\n      ( isDefined( nextProps.template ) && nextProps.template !== this.props.template ) ||\n      ( nextState.src !== this.state.src )\n    )\n  }\n  ; render()\n  { const \n    { src\n    , width: imgWidth\n    , height: imgHeight\n    } = this.state\n  ; const \n    { template\n    , width\n    , height\n    , className\n    } = this.props\n  ; const alt = this.props.alt || this.state.alt || '';\n  ; const crop = getCrop( this.props ) \n  ; const status = getStatus( this.state )\n  ; const statusAttr = statusAsAttr( status )\n  ; const props:ImageTemplateProps = \n    {...this.props\n    , src:getSRC( status, src, this.props )\n    , alt\n    , width\n    , height\n    , imgWidth\n    , imgHeight\n    , crop\n    , status\n    , statusAttr\n    , className\n    }\n  ; return React.createElement( template, props );\n  }\n}\n\nexport default ImageLoader"]}},"error":null,"hash":"74db3d948f8b414ab402e00cd7f0b59b","cacheData":{"env":{}}}