{"id":"../node_modules/react-image-file/dist/createHTMLImageElement.js","dependencies":[{"name":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/createHTMLImageElement.js.map","includedInParent":true,"mtime":1559053938271},{"name":"/home/vusi/projects/vusi-app/node_modules/react-image-file/src/createHTMLImageElement.ts","includedInParent":true,"mtime":1559053938299},{"name":"/home/vusi/projects/vusi-app/package.json","includedInParent":true,"mtime":1559053939559},{"name":"/home/vusi/projects/vusi-app/node_modules/react-image-file/package.json","includedInParent":true,"mtime":1559053938931},{"name":"./isImageLoaded","loc":{"line":3,"column":30},"parent":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/createHTMLImageElement.js","resolved":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/isImageLoaded.js"},{"name":"./noOp","loc":{"line":4,"column":21},"parent":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/createHTMLImageElement.js","resolved":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/noOp.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isImageLoaded_1 = require(\"./isImageLoaded\");\nvar noOp_1 = require(\"./noOp\");\n/**\n * Creates a DOM image object and set its onload and onerror properties.\n * If the image was already cached, onload is set immediatly.\n * @param  src     the source of the image, You may leave it blank if you want to set it later\n * @param  onLoad  callback to call when the image loads (or has loaded). Receives the image object as a parameter\n * @param  onError callback to call when the image has an error. Receives the image object as a parameter.\n *                 Optional, but note that `onload` will never be called if an error occurs\n * @return         the image object\n */\nexports.createHTMLImageElement = function (src, onLoad, onError) {\n    var img = new Image();\n    var called = false;\n    img.alt = '';\n    var callback = function () {\n        if (!called) {\n            called = true;\n            img.onload = noOp_1.noOp;\n            img.onerror = noOp_1.noOp;\n            return true;\n        }\n        ;\n        return false;\n    };\n    var onLoadWrapped = function () { return callback() && onLoad && onLoad(img); };\n    var onErrorWrapped = function (err) { return callback() && onError && onError(img, err); };\n    img.onload = onLoadWrapped;\n    img.onerror = onErrorWrapped;\n    if (src) {\n        img.src = src;\n    }\n    ;\n    if (isImageLoaded_1.isImageLoaded(img)) {\n        setTimeout(onLoadWrapped);\n    }\n    ;\n    return img;\n};\nexports.default = exports.createHTMLImageElement;\n"},"sourceMaps":{"js":{"version":3,"file":"createHTMLImageElement.js","sourceRoot":"","sources":["../src/createHTMLImageElement.ts"],"names":[],"mappings":";;AAAA,iDAA+C;AAC/C,+BAA6B;AAgB7B;;;;;;;;GAQG;AACU,QAAA,sBAAsB,GACjC,UAAE,GAAW,EAAE,MAA2B,EAAE,OAA0B;IACpE,IAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CACxB;IAAC,IAAI,MAAM,GAAG,KAAK,CACnB;IAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CACb;IAAC,IAAM,QAAQ,GAAG;QACf,EAAE,CAAA,CAAC,CAAC,MAAM,CAAC,CACX,CAAC;YAAC,MAAM,GAAG,IAAI,CACd;YAAC,GAAG,CAAC,MAAM,GAAG,WAAI,CAClB;YAAC,GAAG,CAAC,OAAO,GAAG,WAAI,CACnB;YAAC,MAAM,CAAC,IAAI,CAAA;QACb,CAAC;QACH,CAAC;QAAC,MAAM,CAAC,KAAK,CAAA;IACd,CAAC,CACF;IAAC,IAAM,aAAa,GAAG,cAAM,OAAA,QAAQ,EAAE,IAAI,MAAM,IAAI,MAAM,CAAC,GAAG,CAAC,EAAnC,CAAmC,CAChE;IAAC,IAAM,cAAc,GAAG,UAAE,GAAe,IAAM,OAAA,QAAQ,EAAE,IAAI,OAAO,IAAI,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE,EAA5C,CAA4C,CAC3F;IAAC,GAAG,CAAC,MAAM,GAAG,aAAa,CAC3B;IAAC,GAAG,CAAC,OAAO,GAAG,cAAc,CAC7B;IAAC,EAAE,CAAA,CAAC,GAAG,CAAC,CACP,CAAC;QAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAA;IACf,CAAC;IACH,CAAC;IAAC,EAAE,CAAA,CAAE,6BAAa,CAAE,GAAG,CAAG,CAAC,CAC1B,CAAC;QAAC,UAAU,CAAE,aAAa,CAAE,CAAA;IAC7B,CAAC;IACH,CAAC;IAAC,MAAM,CAAC,GAAG,CAAA;AACZ,CAAC,CAAA;AAEH,kBAAe,8BAAsB,CAAA","sourcesContent":["import { isImageLoaded } from './isImageLoaded'\nimport { noOp } from './noOp'\n\n/** \n * callback used when the image loads successfully\n */\nexport interface OnImageLoadSuccess\n  { ( img:HTMLImageElement ):void\n  }\n\n/** \n * callback used when the image loading process produces an error\n */\nexport interface OnImageLoadError\n  { ( img:HTMLImageElement, err:ErrorEvent ):void\n  }\n\n/**\n * Creates a DOM image object and set its onload and onerror properties.\n * If the image was already cached, onload is set immediatly.\n * @param  src     the source of the image, You may leave it blank if you want to set it later\n * @param  onLoad  callback to call when the image loads (or has loaded). Receives the image object as a parameter\n * @param  onError callback to call when the image has an error. Receives the image object as a parameter.\n *                 Optional, but note that `onload` will never be called if an error occurs\n * @return         the image object\n */\nexport const createHTMLImageElement = \n  ( src: string, onLoad?: OnImageLoadSuccess, onError?: OnImageLoadError ):HTMLImageElement =>\n  { const img = new Image()\n  ; let called = false\n  ; img.alt = ''\n  ; const callback = () => \n    { if(!called)\n      { called = true\n      ; img.onload = noOp\n      ; img.onerror = noOp\n      ; return true\n      }\n    ; return false\n    }\n  ; const onLoadWrapped = () => callback() && onLoad && onLoad(img)\n  ; const onErrorWrapped = ( err: ErrorEvent ) => callback() && onError && onError( img, err )\n  ; img.onload = onLoadWrapped\n  ; img.onerror = onErrorWrapped\n  ; if(src)\n    { img.src = src\n    }\n  ; if( isImageLoaded( img ) )\n    { setTimeout( onLoadWrapped )\n    }\n  ; return img\n  }\n\nexport default createHTMLImageElement"]}},"error":null,"hash":"564a29b74ccf0c1fb124b653443997ca","cacheData":{"env":{}}}