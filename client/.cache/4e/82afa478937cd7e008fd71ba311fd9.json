{"id":"../node_modules/react-image-file/dist/loadImageProps.js","dependencies":[{"name":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/loadImageProps.js.map","includedInParent":true,"mtime":1559053938291},{"name":"/home/vusi/projects/vusi-app/node_modules/react-image-file/src/loadImageProps.ts","includedInParent":true,"mtime":1559053938567},{"name":"/home/vusi/projects/vusi-app/package.json","includedInParent":true,"mtime":1559053939559},{"name":"/home/vusi/projects/vusi-app/node_modules/react-image-file/package.json","includedInParent":true,"mtime":1559053938931},{"name":"./load","loc":{"line":3,"column":21},"parent":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/loadImageProps.js","resolved":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/load.js"},{"name":"./createHTMLImageElement","loc":{"line":4,"column":39},"parent":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/loadImageProps.js","resolved":"/home/vusi/projects/vusi-app/node_modules/react-image-file/dist/createHTMLImageElement.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar load_1 = require(\"./load\");\nvar createHTMLImageElement_1 = require(\"./createHTMLImageElement\");\n/**\n * Loads an image buffer from a File, a Blob, or a string\n * Then creates an object with { src, alt, width, height }\n * and calls the passed callback with that object.\n *\n * It accomplishes this by creating an HTML image element,\n * waiting for it to load, then calling the callback,\n * then discarding the image element\n * @param props anything that can become a readable image\n * @param cb a function of shape (err:Error, props:imageProps), where `imageProps` is the object described above\n *\n */\nexports.loadImageProps = function (props, cb) {\n    return (load_1.loadAnything(props, function (err, res, done) {\n        if (err) {\n            cb(err);\n        }\n        else if (res) {\n            createHTMLImageElement_1.createHTMLImageElement(res.src, function (img) {\n                var ret = { src: res.src,\n                    alt: (('alt' in res) ? res.alt : ''),\n                    width: img.width,\n                    height: img.height\n                };\n                if (done) {\n                    done();\n                }\n                ;\n                cb(null, ret);\n            });\n        }\n    }));\n};\nexports.default = exports.loadImageProps;\n"},"sourceMaps":{"js":{"version":3,"file":"loadImageProps.js","sourceRoot":"","sources":["../src/loadImageProps.ts"],"names":[],"mappings":";;AAAA,+BAAiD;AACjD,mEAA+D;AAa/D;;;;;;;;;;;GAWG;AACU,QAAA,cAAc,GACzB,UAAE,KAA2B,EAC3B,EAAkC;IAEpC,OAAA,CAAE,mBAAY,CACV,KAAK,EACL,UAAE,GAA4B,EAC5B,GAAkB,EAClB,IAAgB;QAEhB,EAAE,CAAA,CAAE,GAAI,CAAC,CACT,CAAC;YAAC,EAAE,CAAE,GAAG,CAAE,CAAA;QACX,CAAC;QACD,IAAI,CAAC,EAAE,CAAA,CAAE,GAAI,CAAC,CACd,CAAC;YAAC,+CAAsB,CAAE,GAAG,CAAC,GAAG,EAAE,UAAE,GAAG;gBACpC,IAAM,GAAG,GACT,EAAE,GAAG,EAAC,GAAG,CAAC,GAAG;oBACX,GAAG,EAAC,CAAE,CAAE,KAAK,IAAI,GAAG,CAAE,CAAC,CAAC,CAAG,GAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAE;oBAClD,KAAK,EAAC,GAAG,CAAC,KAAK;oBACf,MAAM,EAAC,GAAG,CAAC,MAAM;iBAClB,CACF;gBAAC,EAAE,CAAA,CAAE,IAAK,CAAC,CACV,CAAC;oBAAC,IAAI,EAAE,CAAA;gBACR,CAAC;gBACH,CAAC;gBAAC,EAAE,CAAE,IAAI,EAAE,GAAG,CAAE,CAAA;YACjB,CAAC,CAAC,CAAA;QACJ,CAAC;IACH,CAAC,CACJ,CACF;AAzBC,CAyBD,CAAA;AAED,kBAAe,sBAAc,CAAA","sourcesContent":["import {loadAnything, ImageContent} from './load'\nimport {createHTMLImageElement} from './createHTMLImageElement'\n\nexport interface ImageProps\n  { src:string\n  ; alt:string\n  ; width:number\n  ; height:number\n  }\n\nexport interface CreateImageFromReadableCallback\n  { (err?:Error|DOMError|null,props?:ImageProps):any\n  }\n\n/**\n * Loads an image buffer from a File, a Blob, or a string\n * Then creates an object with { src, alt, width, height }\n * and calls the passed callback with that object.\n * \n * It accomplishes this by creating an HTML image element,\n * waiting for it to load, then calling the callback,\n * then discarding the image element\n * @param props anything that can become a readable image\n * @param cb a function of shape (err:Error, props:imageProps), where `imageProps` is the object described above\n * \n */\nexport const loadImageProps = \n  ( props: File | Blob | string\n  , cb:CreateImageFromReadableCallback\n  ) =>\n  ( loadAnything\n    ( props\n    , ( err: Error | DOMError | null\n      , res?: ImageContent\n      , done?: () => any\n      ) => \n      { if( err )\n        { cb( err )\n        }\n        else if( res )\n        { createHTMLImageElement( res.src, ( img ) => \n          { const ret = \n            { src:res.src\n            ,\talt:( ( 'alt' in res ) ? ( res as any ).alt : '' )\n            ,\twidth:img.width\n            ,\theight:img.height\n            }\n          ; if( done )\n            { done()\n            }\n          ; cb( null, ret )\n          })\n        }\n      }\n  )\n)\n\nexport default loadImageProps"]}},"error":null,"hash":"192baeb7d7c660e24577653eb6131f86","cacheData":{"env":{}}}